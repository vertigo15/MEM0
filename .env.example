# ==============================================================================
# Mem0 Application Environment Configuration
# ==============================================================================
# Copy this file to .env and fill in your actual values
# This file shows all available configuration options for different providers

# ==============================================================================
# DATABASE CONFIGURATION (Required)
# ==============================================================================
# PostgreSQL database with pgvector extension

# For local PostgreSQL (using docker-compose)
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USER=postgres
DATABASE_PASSWORD=postgres123
DATABASE_NAME=mem0_db

# For cloud-hosted PostgreSQL (Azure/AWS RDS)
# DATABASE_HOST=your-postgres-host.amazonaws.com
# DATABASE_PORT=5432
# DATABASE_USER=your-db-user
# DATABASE_PASSWORD=your-secure-password
# DATABASE_NAME=your-db-name

# ==============================================================================
# LLM PROVIDER CONFIGURATION (Required - Choose one)
# ==============================================================================
# Supported values: "azure_openai" or "aws_bedrock"
LLM_PROVIDER=azure_openai

# ------------------------------------------------------------------------------
# AZURE OPENAI CONFIGURATION (Required if LLM_PROVIDER=azure_openai)
# ------------------------------------------------------------------------------
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_API_KEY=your-azure-openai-api-key
AZURE_OPENAI_DEPLOYMENT=your-deployment-name
AZURE_OPENAI_API_VERSION=2024-02-01

# ------------------------------------------------------------------------------
# AWS BEDROCK CONFIGURATION (Required if LLM_PROVIDER=aws_bedrock)
# ------------------------------------------------------------------------------
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# BEDROCK_MODEL_ID=anthropic.claude-3-5-sonnet-20241022-v2:0

# Alternative Bedrock model options:
# BEDROCK_MODEL_ID=anthropic.claude-3-sonnet-20240229-v1:0
# BEDROCK_MODEL_ID=anthropic.claude-3-haiku-20240307-v1:0

# ==============================================================================
# OBJECT STORAGE CONFIGURATION (Optional)
# ==============================================================================
# Supported values: "s3" or "azure_blob" (leave empty for no storage)
STORAGE_PROVIDER=

# ------------------------------------------------------------------------------
# AWS S3 CONFIGURATION (Required if STORAGE_PROVIDER=s3)
# ------------------------------------------------------------------------------
# S3_BUCKET_NAME=your-s3-bucket-name
# S3_REGION=us-east-1
# S3_ACCESS_KEY=your-s3-access-key
# S3_SECRET_KEY=your-s3-secret-key

# ------------------------------------------------------------------------------
# AZURE BLOB STORAGE CONFIGURATION (Required if STORAGE_PROVIDER=azure_blob)
# ------------------------------------------------------------------------------
# AZURE_STORAGE_ACCOUNT_NAME=yourstorageaccount
# AZURE_STORAGE_ACCOUNT_KEY=your-storage-account-key
# AZURE_STORAGE_CONTAINER_NAME=mem0-container

# ==============================================================================
# APPLICATION CONFIGURATION (Optional)
# ==============================================================================
# Application port (default: 8000)
APP_PORT=8000

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Number of worker processes (default: 1)
WORKERS=1

# ==============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT SCENARIOS
# ==============================================================================

# ------------------------------------------------------------------------------
# SCENARIO 1: Azure OpenAI + Local PostgreSQL + No Storage
# ------------------------------------------------------------------------------
# DATABASE_HOST=localhost
# DATABASE_PORT=5432
# DATABASE_USER=postgres
# DATABASE_PASSWORD=postgres123
# DATABASE_NAME=mem0_db
# LLM_PROVIDER=azure_openai
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_API_KEY=your-api-key
# AZURE_OPENAI_DEPLOYMENT=gpt-4
# AZURE_OPENAI_API_VERSION=2024-02-01

# ------------------------------------------------------------------------------
# SCENARIO 2: AWS Bedrock + RDS PostgreSQL + S3 Storage
# ------------------------------------------------------------------------------
# DATABASE_HOST=your-rds-instance.amazonaws.com
# DATABASE_PORT=5432
# DATABASE_USER=postgres
# DATABASE_PASSWORD=your-secure-password
# DATABASE_NAME=mem0_production
# LLM_PROVIDER=aws_bedrock
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# BEDROCK_MODEL_ID=anthropic.claude-3-5-sonnet-20241022-v2:0
# STORAGE_PROVIDER=s3
# S3_BUCKET_NAME=mem0-storage-bucket
# S3_REGION=us-east-1
# S3_ACCESS_KEY=your-s3-access-key
# S3_SECRET_KEY=your-s3-secret-key

# ------------------------------------------------------------------------------
# SCENARIO 3: Azure OpenAI + Azure PostgreSQL + Azure Blob Storage
# ------------------------------------------------------------------------------
# DATABASE_HOST=your-postgres.postgres.database.azure.com
# DATABASE_PORT=5432
# DATABASE_USER=postgres@your-server
# DATABASE_PASSWORD=your-secure-password
# DATABASE_NAME=mem0_db
# LLM_PROVIDER=azure_openai
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_API_KEY=your-api-key
# AZURE_OPENAI_DEPLOYMENT=gpt-4
# AZURE_OPENAI_API_VERSION=2024-02-01
# STORAGE_PROVIDER=azure_blob
# AZURE_STORAGE_ACCOUNT_NAME=yourstorageaccount
# AZURE_STORAGE_ACCOUNT_KEY=your-storage-key
# AZURE_STORAGE_CONTAINER_NAME=mem0-container

# ==============================================================================
# SECURITY NOTES
# ==============================================================================
# - Never commit your actual .env file to version control
# - Use strong, unique passwords for your database
# - Rotate API keys and access keys regularly
# - Use IAM roles instead of access keys when possible (especially in cloud environments)
# - Enable SSL/TLS for database connections in production
# - Use secrets management services for production deployments

# ==============================================================================
# PERFORMANCE TUNING (Optional)
# ==============================================================================
# Uncomment and adjust these for production workloads
# WORKERS=4
# DATABASE_POOL_SIZE=20
# DATABASE_MAX_OVERFLOW=30